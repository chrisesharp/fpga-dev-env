# Define SciTE settings for edif files.

# edif files
file.patterns.ldc=*.ldc
filter.ldc=ldc (ldc)|$(file.patterns.ldc)|

lexer.$(file.patterns.ldc)=ldc(Synplify) 

word.chars.ldc=$(chars.alpha)$(chars.numeric)_
word.characters.$(file.patterns.ldc)=$(word.chars.ldc)


comment.block.ldc=#
#comment.block.at.line.start.edif=1
#comment.stream.start.edif={
#comment.stream.end.edif=}
#comment.box.start.edif=/*
#comment.box.middle.edif= *
#comment.box.end.edif= */

#~ fold.at.Begin=1
#~ fold.at.Parenthese=1

#statement.lookback.$(file.patterns.edif)=20
#block.start.$(file.patterns.edif)=5 begin
#block.end.$(file.patterns.edif)=5 end
#statement.indent.$(file.patterns.edif)=5 always case casex casez else for if while \
#module function task

indent.maintain.$(file.patterns.ldc)=1;



keywords.$(file.patterns.ldc)=create_clock set_input_delay set_output_delay set_max_delay set_min_delay set_multicycle_path set_false_path create_generated_clock set_clock_groups

keywords2.$(file.patterns.ldc)= 
# edif styles

# Default
style.ldc.32=$(font.base)
# White space
style.ldc.0=fore:#800080
# Comment
style.ldc.1=$(colour.code.comment.line),$(font.code.comment.line)
# Bang comment
style.ldc.2=fore:#3F7F3F,$(font.code.comment.line)
# Number
style.ldc.3=$(colour.number)
# Double quoted string
style.ldc.4=$(colour.string)
# Operators
#style.edif.5=$(colour.operator)
# Identifiers
style.ldc.6=
# End of line where string is not closed
style.ldc.7=fore:#000000,$(font.string.literal),back:#E0C0E0,eolfilled
# Keyword
style.ldc.8=$(colour.keyword)
# Std operator
style.ldc.9=fore:#007F7F
# Attribute
style.ldc.10=fore:#804020
# Std Function
style.ldc.11=fore:#808020

